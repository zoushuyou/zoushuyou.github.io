<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring Boot on ShuYou&#39;s Blog</title>
    <link>http://localhost:1313/tags/spring-boot/</link>
    <description>Recent content in Spring Boot on ShuYou&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Oct 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/spring-boot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SSM项目改造为Spring Boot项目</title>
      <link>http://localhost:1313/post/spring-boot/ssm%E9%A1%B9%E7%9B%AE%E6%94%B9%E9%80%A0%E4%B8%BAspring-boot%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/spring-boot/ssm%E9%A1%B9%E7%9B%AE%E6%94%B9%E9%80%A0%E4%B8%BAspring-boot%E9%A1%B9%E7%9B%AE/</guid>
      <description>本文介绍怎么把SSM项目改造为Spring Boot项目 0.改造步骤 原ssm项目打成jar包 将相关配置文件放到resources目录下 将前端界</description>
    </item>
    <item>
      <title>Spring Boot内容协商</title>
      <link>http://localhost:1313/post/spring-boot/spring-boot%E5%86%85%E5%AE%B9%E5%8D%8F%E5%95%86/</link>
      <pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/spring-boot/spring-boot%E5%86%85%E5%AE%B9%E5%8D%8F%E5%95%86/</guid>
      <description>本文介绍内容协商相关知识 内容协商（Content Negotiation） 内容协商：客户端和服务器就响应的资源内容进行交涉，然后服务器提供给客</description>
    </item>
    <item>
      <title>Spring Boot中使用过滤器和拦截器</title>
      <link>http://localhost:1313/post/spring-boot/spring-boot%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%BF%87%E6%BB%A4%E5%99%A8%E5%92%8C%E6%8B%A6%E6%88%AA%E5%99%A8/</link>
      <pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/spring-boot/spring-boot%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%BF%87%E6%BB%A4%E5%99%A8%E5%92%8C%E6%8B%A6%E6%88%AA%E5%99%A8/</guid>
      <description>过滤器（Filter）和拦截器（Interceptor）是Web项目中常用的两个功能，本文将简单介绍在Spring Boot中使用过滤器和拦截</description>
    </item>
    <item>
      <title>Spring Boot中操作JSON</title>
      <link>http://localhost:1313/post/spring-boot/spring-boot%E4%B8%AD%E7%9A%84json/</link>
      <pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/spring-boot/spring-boot%E4%B8%AD%E7%9A%84json/</guid>
      <description>本文介绍常用的JSON相关操作，Spring Boot内置Jackson包可以进行JSON相关操作 序列化 Fastjson User user1 = new User(); String s1 = JSON.toJSONString(user1); System.out.println(s1); Jackson ObjectMapper objectMapper = new ObjectMapper(); String s2</description>
    </item>
    <item>
      <title>Spring Boot相关注解</title>
      <link>http://localhost:1313/post/spring-boot/spring-boot%E7%9B%B8%E5%85%B3%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/spring-boot/spring-boot%E7%9B%B8%E5%85%B3%E6%B3%A8%E8%A7%A3/</guid>
      <description>本文介绍Spring Boot开发web相关注解知识 基础web注解 Bean处理 @Component：通用的注解，可标注任意类为 Spring 组件。如果一个</description>
    </item>
    <item>
      <title>Spring Boot自动配置相关知识</title>
      <link>http://localhost:1313/post/spring-boot/spring-boot%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/spring-boot/spring-boot%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE/</guid>
      <description>本文介绍Spring Boot自动配置相关知识 Spring 3.0开始，Spring提供了Java Config的方式，进行Spring bean的创建 @Configuration public class</description>
    </item>
  </channel>
</rss>
